df = wb(indicator = "NY.GDP.MKTP.CD", startdate = 2000, enddate = 2016)
haad(df)
head(df)
View(df)
names = c('ARG', 'BRA', 'CHN')
df[df$country==names]
df[df$country==names,]
df$country==names
df[df$country==names ]
df[,df$country==names]
names = c('Argentina', 'Brazil', 'China')
df[df$country==names, ]
df[df$country==names ]
df[df$country==names, ]
View(df)
df[df$country==names&date>1999, ]
df[df$country==names and date>1999, ]
df[df$country==names & date>1999, ]
df[df$country==names , ]
filt =  (df$country=='Argentina'|df$country== 'Brazil'|df$country == 'China')
df[df$country==filt , ]
filt =  c(df$country=='Argentina'|df$country== 'Brazil'|df$country == 'China')
df[df$country==filt , ]
filt =  data>1999 & (df$country=='Argentina'|df$country == 'Brazil'|df$country == 'China')
filt =  df$date>=1999 & (df$country=='Argentina'|df$country == 'Brazil'|df$country == 'China')
df[df$country==filt , ]
df[df$country==filt , ]
df[df$country==filt , ]
df[filt , ]
df2 = df[filt , ]
df2[df2$iso3c=='BRA', ]
plot(df2$date, df2[df2$iso3c=='BRA', ]$value )
plot(df2$date[df2$iso3c=='BRA', ], df2[df2$iso3c=='BRA', ]$value )
plot(df2[df2$iso3c=='BRA', ]$value )
plot(seq(2000, 2016), df2[df2$iso3c=='BRA', ]$value )
plot(seq(2000, 2016), df2[df2$iso3c=='BRA', ]$value, type = 'l' )
library(wbstats)
df = wb(indicator = 'BX.KLT.DINV.WD.GD.ZS', startdate = 2000, enddate = 2016)
filt =   (df$country=='Argentina'|df$country == 'Brazil'|df$country == 'China')
df2 = df[filt , ]
plot(seq(2000, 2016), df2[df2$iso3c=='BRA', ]$value, type = 'l' )
library(ipeadatar)
embi = ipeadata(c('JPM366_EMBI366'))[,2:3]
colnames(embi) = c('date', 'embi')
plot(embi)
plot(embi, type='l')
fp = function(){
print('Olá mundo !')
}
fp
fp
fp
print('Olá mundo !')
print('Olá mundo !')
print('Olá mundo !')
print('Olá mundo !')
print('Olá mundo !')
for(i in 1:10){
print('Olá mundo !')
}}
fp = function(x){
for(i in 1:x){
print('Olá mundo !')
}}
fp(10)
fx = function(x){
x^2
}
sig =  function(x){
if (x>0){
return(0)
}else{
return(1)
}
}
sig(0)
sig(2)
if (x>=0){
return(0)
}else{
return(1)
}
if (x=>0){
return(0)
}else{
return(1)
}
sig =  function(x){
if (x=>0){
return(0)
}else{
return(1)
}
}
sig =  function(x){
if (x>=0){
return(0)
}else{
return(1)
}
}
sig(2)
library(quantmod)
ibov = getSymbols('^BVSP', src='yahoo',
from= '2018-01-01',
to = '2020-05-01',
periodicity = "monthly",    # IBOV mensal
auto.assign = F)[,4]
colnames(ibov) = 'ibov'
ibov = ibov[is.na(ibov)==F]
for(i in 1:length(ibov)){
plot(ibov[i])
}
windows()
for(i in 1:length(ibov)){
plot(ibov[i])
}
windows()
for(i in 1:length(ibov)){
plot(ibov[i])
}
ibov = getSymbols('^BVSP', src='yahoo',
from= '1999-01-01',
to = '2020-05-01',
periodicity = "monthly",    # IBOV mensal
auto.assign = F)[,4]
colnames(ibov) = 'ibov'
ibov = ibov[is.na(ibov)==F]
ibov[1]
plot(ibov)
plot(ibov)
plot(ibov$ibov)
plot(ibov$ibov)
data.frame(ibov)
ibov =data.frame(ibov)
windows()
for(i in 1:length(ibov)){
plot(ibov[i], col='red')
}
windows()
for(i in 1:length(ibov)){
plot(ibov[i], col='red')
}
windows()
for(i in 1:length(ibov)){
plot(ibov$ibov[i], col='red')
}
View(ibov)
plot(ibov)
plot(ibov)
View(ibov)
windows()
for(i in 1:length(ibov)){
plot(i, ibov$ibov[i], col='red')
}
length(ibov)
ibov = getSymbols('^BVSP', src='yahoo',
from= '1999-01-01',
to = '2020-05-01',
periodicity = "monthly",    # IBOV mensal
auto.assign = F)[,4]
colnames(ibov) = 'ibov'
ibov = ibov[is.na(ibov)==F]
ibov =data.frame(ibov)
windows()
for(i in 1:256{
plot(i, ibov$ibov[i], col='red')
}
windows()
for(i in 1:256{
plot(ibov[i], col='red')
}
plot(ibov)
colnames(ibov) = 'ibov'
ibov = ibov[is.na(ibov)==F]
plot(ibov)
plot(ibov[1:11])
windows()
for(i in 1:256{
plot(ibov[1:i], col='red')
}
windows()
for(i in 1:256{
plot(ibov[i], col='red')
}
windows()
for(i in 1:256){
plot(ibov[i], col='red')
}
windows()
for(i in 1:256){
plot(ibov[1:i], col='red')
}
windows()
for(i in 1:256){
plot(ibov[1:i], col='blue', pch=19)
}
ibov = getSymbols('^BVSP', src='yahoo',
from= '1999-01-01',
to = '2020-05-01',
#   periodicity = "monthly",    # IBOV mensal
auto.assign = F)[,4]
colnames(ibov) = 'ibov'
ibov = ibov[is.na(ibov)==F]
windows()
for(i in 1:256){
plot(ibov[1:i], col='blue', pch=19)
}
ibov = getSymbols('^BVSP', src='yahoo',
from= '1990-01-01',
to = '2020-05-01',
periodicity = "monthly",    # IBOV mensal
auto.assign = F)[,4]
colnames(ibov) = 'ibov'
ibov = ibov[is.na(ibov)==F]
windows()
for(i in 1:256){
plot(ibov[1:i], col='blue', pch=19)
}
windows()
for(i in 1:256){
plot(ibov[1:i], col='blue', pch=19)
}
ibov = getSymbols('^BVSP', src='yahoo',
from= '1999-01-01',
to = '2020-05-01',
periodicity = "monthly",    # IBOV mensal
auto.assign = F)[,4]
colnames(ibov) = 'ibov'
ibov = ibov[is.na(ibov)==F]
windows()
for(i in 1:256){
plot(ibov[1:i], col='blue', pch=19)
}
plot(ibov)
windows()
for(i in 1:256){
plot(ibov[1:i], col='blue', pch=19)
}
ibov = data.frame(ibov)
windows()
for(i in 1:256){
plot(ibov[1:i], col='blue', pch=19)
}
View(ibov)
ibov
ibov[1]
ibov[,1]
windows()
for(i in 1:256){
plot(ibov[,1:i], col='blue', pch=19)
}
windows()
for(i in 1:256){
plot(ibov[,1:i], col='blue', pch=19)
}
windows()
for(i in 1:256){
plot(ibov[1:i], col='blue', pch=19)
}
windows()
for(i in 1:256){
plot(ibov[1:i,], col='blue', pch=19)
}
# Monitoria de econometria - 1
# aula 7
setwd('D:/Git projects/Econometry')   # definir o diretório
v = c(0, 1)
c = 0
n = 10000
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
sample(v, 1)
for(i in 1:n){
if(sample(v, 1)==0)
c = c + 1
print('cara')
}else{
print('coroa')
}
for(i in 1:n){
if(sample(v, 1)==0)
c = c + 1
print('cara')
}else{
print('coroa')
}
}
for(i in 1:n){
if(sample(v, 1)==0)
c = c + 1
print('cara')
}else{
print('coroa')
}
}
}
for(i in 1:n){
if(sample(v, 1)==0){
c = c + 1
print('cara')
}else{
print('coroa')
}}
v = c(0, 1)
c = 0
n = 10000
for(i in 1:n){
if(sample(v, 1)==0){
c = c + 1
print('cara')
}else{
print('coroa')
}}
cat('A proporção de caras é:', c/n)
for(i in 1:n){
if(sample(v, 1)==0){
c = c + 1
print('cara')
}else{
print('coroa')
}}
cat('A proporção de caras é:', c/n)
c = 0
n = 10000
for(i in 1:n){
if(sample(v, 1)==0){
c = c + 1
print('cara')
}else{
print('coroa')
}}
cat('A proporção de caras é:', c/n)
p_t0 = 1
p_t1 = c()
n = 1000
for(i in 1:n){
p_t1[i] = p_t0 + rnorm(1, 0, 1)
p_t0 = p_t1
}
plot(p_t1, type='l')
p_t0 = 1
p_t1 = c()
n = 100
for(i in 1:n){
p_t1[i] = p_t0 + rnorm(1, 0, 1)
p_t0 = p_t1
}
plot(p_t1, type='l')
vec = c(1, 4, 5, 7, 12, 4.5, 3, NaN)
mv = mean(vec, na.rm = T)
mean(vec)
is.na(vec)
ifelse(is.na(vec)==T, mv, vec)
mv
ifelse(is.na(vec)==T, mv, vec)
x = 6
while(x){
print(x)
x = x - 1
if(x==3){
break
}
}
fx = function(x){
x^2
}
fx(3)
fx(10)
fx(10)
fx(100)
fx = function(x, y=0){
x^2 + y
}
fx(4)
fx(4, 1)
fp = function(x){
for (i in 1:x) {
print('Olá mundo!')
}
}
fp(10)
fp(1000)
fp(1000000)
fp(100)
bin = function(x){
if(x>=0){
return(0)
}else{
return(1)
}
}
bin(2)
bin(0.3)
bin = function(x){
if(x>=0){
return(0)
}else{
return(1)
}
}
bin(2)
bin(0.1)
bin = function(x){
if(x>=0){
return(0)
}else{
return(1)
}
}
bin(0.1)
bin(-0.1)
bin = function(x){
if(x>=1){
return(0)
}else{
return(1)
}
}
bin(2)
bin(0.4)
library(wbstats)
df = wb(indicator = 'BX.KLT.DINV.WD.GD.ZS', startdate = 2000, enddate = 2016)
View(df)
View(df)
library(quantmod)
ibov = getSymbols('^BVSP', src = 'yahoo',
from = '1999-01-01',
to = '2020-05-01',
periodicity= 'monthly')[,4]
View(BVSP)
ibov = getSymbols('^BVSP', src = 'yahoo',
from = '1999-01-01',
to = '2020-05-01',
periodicity= 'monthly',
auto.assign = T)[,4]
View(BVSP)
ibov = getSymbols('^BVSP', src = 'yahoo',
from = '1999-01-01',
to = '2020-05-01',
periodicity= 'monthly',
auto.assign = T)[,4]
ibov = getSymbols('^BVSP', src = 'yahoo',
from = '1999-01-01',
to = '2020-05-01',
periodicity= 'monthly',
auto.assign = F)[,4]
View(BVSP)
View(ibov)
rm(BVSP)
colnames(ibov) = 'ibov'
summary(ibov)
ibov = data.frame(ibov)
plot(ibov)
plot(seq(1, 256), ibov)
plot(seq(1, 256, 1), ibov)
ibov = getSymbols('^BVSP', src = 'yahoo',
from = '1999-01-01',
to = '2020-05-01',
periodicity= 'monthly',
auto.assign = F)[,4]
colnames(ibov) = 'ibov'
summary(ibov)
plot(ibov)
bb = getSymbols('BBAS3.SA', src = 'yahoo',
from = '1999-01-01',
to = '2020-05-01',
periodicity= 'monthly',
auto.assign = F)[,4]
View(bb)
library(GetBCBData)
cb = gbcbd_get_series(11768, first.date = '2000-01-01',
last.date = '2000-05-01',
format.data = 'long',
be.quiet = F)[,1:2]
View(cb)
cb = gbcbd_get_series(11768, first.date = '2000-01-01',
last.date = '2020-05-01',
format.data = 'long',
be.quiet = F)[,1:2]
plot(cb)
plot(cb, type='l')
library(ipeadatar)
embi = ipeadata(c('JPM366_EMBI366'))[,2:3]
plot(embi)
plot(embi, type='l')
load("C:/Users/user/Downloads/Pnad_Covid.RData")
View(PNAD_COVID_052020)
View(PNAD_COVID_052020)
