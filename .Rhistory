ppois(1, 0.1)
ppois(0, 0.1) + ppois(1, 0.1)
ppois(0, 0) + ppois(1, 0.1)
ppois(0, 1) + ppois(1, 0.1)
ppois(0, 1) + ppois(1, 1)
ppois(1, 1)
qpois(0.7357589, 1)
ppois(1, 1)  # np = lambda
qpois(0.7357589, 1)
hist( rpois(n=1000, lambda=1), col='lightgreen', breaks = 20)
hist( rpois(n=1000, lambda=100), col='lightgreen', breaks = 20)
hist( rpois(n=1000, lambda=1), col='lightgreen', breaks = 20)
hist( rpois(n=1000, lambda=1), col='lightgreen', breaks = 20, density = T)
hist( rpois(n=1000, lambda=1), col='lightgreen', breaks = 20, probability = T)
hist( rpois(n=1000, lambda=10), col='lightgreen', breaks = 20, probability = T)
curve(dpois(100, 10))
curve(dpois(x, 10))
curve(dpois(x, 10), xlim = c(0, 10))
curve(dpois(x, 100), xlim = c(0, 10))
curve(dpois(x, 100), xlim = c(0, 100))
curve(dpois(x, 100), xlim = c(0, 1200))
curve(dpois(x, 100), xlim = c(0, 200))
qpois(0.5, 100)
abline(v = qpois(0.5, 100))
curve(dpois(x, 100), xlim = c(0, 200))
abline(v = qpois(0.5, lambda = 100))
ppois(100, 100)
qpois(0.5, 100)
qpois(0.5, 100)
ppois(100, 100)
qpois(0.5265, 100)
qpois(0.6, 100)
hist( rpois(n=1000, lambda=10), col='lightgreen', breaks = 20, probability = T)
hist( rpois(n=1000, lambda=10), col='lightgreen', breaks = 20, probability = T)
hist( rpois(n=1000, lambda=10), col='lightgreen', breaks = 20, probability = T)
hist( rpois(n=1000, lambda=10), col='lightgreen', breaks = 20, probability = T)
hist( rpois(n=1000, lambda=10), col='lightgreen', breaks = 20, probability = T)
hist( rpois(n=1000, lambda=10), col='lightgreen', breaks = 20, probability = T)
hist( rpois(n=1000, lambda=10), col='lightgreen', breaks = 20, probability = T)
ppois(100, 100)
curve(dpois(x, 100), xlim = c(0, 200))
abline(v = qpois(0.5, lambda = 100))
dnorm(10, 0, 1)
dnorm(1, 0, 1)
dnorm(0, 0, 1)
curve( dnorm(x, 0, 1))
curve( dnorm(x, 0, 1), xlim= c(-5, 5))
abline(v = 0)
text(c(-1,0.1), '50%')
text(c(-1, 0.1), '50%')
text( c(-2, 0.1), '50%')
curve( dnorm(x, 0, 1), xlim= c(-5, 5))
abline(v = 0)
text( c(-2, 0.1), '50%')
text( c(2, 0.1), '50%')
curve( dnorm(x, 0, 1), xlim= c(-5, 5))
abline(v = 0)
text( c(2, 0.1), '50%')
curve( dnorm(x, 0, 1), xlim= c(-5, 5))
abline(v = 0)
text( -1, 0.1, '50%')
pnorm(0.1, 0, 1)
pnorm(0.11, 0, 1)
qnorm(0.6, 0, 1)
curve( dnorm(x, 0, 1), xlim= c(-5, 5))
abline(v = qnorm(0.6, 0, 1))
text( qnorm(0.6, 0, 1), 0.0, 'quantil')
text( qnorm(0.6, 0, 1)+1, 0.0, 'quantil')
curve( dnorm(x, 0, 1), xlim= c(-5, 5))
abline(v = qnorm(0.6, 0, 1))
text( qnorm(0.6, 0, 1)+1, 0.0, 'quantil')
curve( dnorm(x, 0, 1), xlim= c(-5, 5))
abline(v = qnorm(0.6, 0, 1))
#text( qnorm(0.6, 0, 1)+1, 0.0, 'quantil')
curve( dnorm(x, 0, 1), xlim= c(-5, 5))
abline(v = qnorm(0.6, 0, 1))
text( -1, 0.1, '60%')
vv = seq(1, 9,1 )
vv
summary(vv)
vv
pnorm(0.1, 0, 1)
sort(c(9, 11, 4, -1 0))
sort(c(9, 11, 4, -1, 0))
sort(c(9, 11, 4, -1, 0), decreasing = T)
sort(c(9, 11, 4, -1, 0), decreasing = F)
curve( dnorm(x, 0, 1), xlim= c(-5, 5))
abline(v = 0)
text( -1, 0.1, '50%')
median(rnorm(1000, 0, 1))
median(rnorm(1000, 0, 1))
median(rnorm(1000, 0, 1))
median(rnorm(1000, 0, 1))
median(rnorm(10000, 0, 1))
median(rnorm(10000, 0, 1))
median(rnorm(100000, 0, 1))
median(rnorm(10000000, 0, 1))
median(rnorm(10000000, 0, 1))
median(rnorm(10000000, 0, 1))
median(rnorm(1e7, 0, 1))
median(rnorm(1e8, 0, 1))
median(rnorm(1e9, 0, 1))
curve(dexp(x, 1))
curve(dexp(x, 1), xlim=c(0, 5))
curve(dexp(x, 1), xlim=c(-1, 5))
curve(dexp(x, 1), xlim=c(0, 5))
curve(dexp(x, 1), xlim=c(-0.1, 5))
curve(dexp(x, 1), xlim=c(-0, 5))
pexp(10, 1/10)
1 - pexp(10, 1/10)
curve(dexp(x, 1/10), xlim=c(0, 5))
curve(dexp(x, 1), xlim=c(0, 5))
curve(dexp(x, 1/10), xlim=c(0, 20))
curve(dexp(x, 1), xlim=c(0, 20))
pexp(20, 1/10) -  pexp(10, 1/10)
pexp(20, 1/10)
qexp(0.8646,rate = 1/10)
qexp(pexp(20, 1/10), rate = 1/10)
rexp(10, 1/10)
hist(rexp(10, 1/10))
hist(rexp(1e5, 1/10))
hist(rexp(1e5, 1/10), col='lightgreen')
hist(rexp(1e5, 1/10), col='lightgreen', breaks=25)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
set.seed(50)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
set.seed(50)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
set.seed(50)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
set.seed(50)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
set.seed(50)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
hist(rexp(1e5, 1/10), col='lightgreen', breaks=35)
rexp(10, 1/10)
h = function(e, elast){
1*e^elast
}
h(2, 0.1)
v =  seq(0, 2, 0.01)
h(2, v)
plot(v , h(2, v) )
plot(v , h(2, v), type= 'l' )
v2 = seq(0, 5)
plot(v2 , h(v2, 0.3), type= 'l' )
v2 = seq(0, 5, 0.01)
plot(v2 , h(v2, 0.3), type= 'l' )
plot(v2 , h(v2, 0.3), type= 'l',
xlab = 'Consumo de bens educacionais',
ylab= 'Capital Humano')
plot(v2 , h(v2, 3), type= 'l',
xlab = 'Consumo de bens educacionais',
ylab= 'Capital Humano')
v2 = seq(0, 50, 0.01)
plot(v2 , h(v2, 3), type= 'l',
xlab = 'Consumo de bens educacionais',
ylab= 'Capital Humano')
x = c(1, 2, 4, 8, 5, 4, 6, 8, 3, 1, 5, 6, 3, 1.1, 7, 0.9, 1, 3, 4, 7, 8)
y = c(0, 1, 3, 1, 3, 4, 6.6, 8, 1, 4.1, 6, 7, 4, 3.6, 5, 3, 1, 2, 2.2, 1, 5.7)
13/length(x)
b = c()
for (j in 10){
for (i in 1:300) {
ys = sample(y, 13, replace = T)
xs = sample(x, 13, replace = T)
reg1 = lm(ys~xs-1)
b[i] = reg1$coefficients
}
b_med = mean(b)
}
b_med = c()
for (j in 10){
for (i in 1:300) {
ys = sample(y, 13, replace = T)
xs = sample(x, 13, replace = T)
reg1 = lm(ys~xs-1)
b[i] = reg1$coefficients
}
b_med[j] = mean(b)
}
b_med
for (j in 10){
for (i in 1:300) {
ys = sample(y, 13, replace = T)
xs = sample(x, 13, replace = T)
reg1 = lm(ys~xs-1)
b[i] = reg1$coefficients
}
b_med[j] = mean(b)
}
for (j in 10){
b = c()
for (i in 1:300) {
ys = sample(y, 13, replace = T)
xs = sample(x, 13, replace = T)
reg1 = lm(ys~xs-1)
b[i] = reg1$coefficients
}
b_med[j] = mean(b)
}
b_med
b = c()
b_med = c()
for (j in 1:10){
b = c()
for (i in 1:300) {
ys = sample(y, 13, replace = T)
xs = sample(x, 13, replace = T)
reg1 = lm(ys~xs-1)
b[i] = reg1$coefficients
}
b_med[j] = mean(b)
}
hist(b_med)
mean(b_med)
hist(b_med, breaks = 20)
plot(data$x, length(data)*data$y, type = 'l')
points(mean(b_med), 0, pch=19, col='red', cex=2)
points(reg$coefficients, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
reg = lm(y~x-1)
# plot
plot(data$x, length(data)*data$y, type = 'l')
points(mean(b_med), 0, pch=19, col='red', cex=2)
points(reg$coefficients, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
plot(data$x, length(data)*data$y, type = 'l')
points(mean(b_med), 0, pch=19, col='red', cex=2)
points(reg$coefficients, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
data = density(b)
reg = lm(y~x-1)
plot(data$x, length(data)*data$y, type = 'l')
points(mean(b_med), 0, pch=19, col='red', cex=2)
points(reg$coefficients, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
data = density(b_med)
plot(data$x, length(data)*data$y, type = 'l')
points(mean(b_med), 0, pch=19, col='red', cex=2)
points(reg$coefficients, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
reg$coefficients
b = c()
b_med = c()
for (j in 1:200){
b = c()
for (i in 1:300) {
ys = sample(y, 13, replace = T)
xs = sample(x, 13, replace = T)
reg1 = lm(ys~xs-1)
b[i] = reg1$coefficients
}
b_med[j] = mean(b)
}
mean(b_med)
hist(b_med, breaks = 20)
data = density(b_med)
reg = lm(y~x-1)
# plot
plot(data$x, length(data)*data$y, type = 'l')
points(mean(b_med), 0, pch=19, col='red', cex=2)
points(reg$coefficients, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
b = c()
b_med = c()
for (j in 1:200){
b = c()
for (i in 1:5000) {
ys = sample(y, 13, replace = T)
xs = sample(x, 13, replace = T)
reg1 = lm(ys~xs-1)
b[i] = reg1$coefficients
}
b_med[j] = mean(b)
}
mean(b_med)
hist(b_med, breaks = 20)
data = density(b_med)
reg = lm(y~x-1)
# plot
plot(data$x, length(data)*data$y, type = 'l')
points(mean(b_med), 0, pch=19, col='red', cex=2)
points(reg$coefficients, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
reg$coefficients
hist(b_med, breaks = 20)
x = c(1, 2, 4, 8, 5, 4, 6, 8, 3, 1, 5, 6, 3, 1.1, 7, 0.9, 1, 3, 4, 7, 8, -1)
y = c(0, 1, 3, 1, 3, 4, 6.6, 8, 1, 4.1, 6, 7, 4, 3.6, 5, 3, 1, 2, 2.2, 1, 5.7, -9)
b = c()
b_med = c()
for (j in 1:200){
b = c()
for (i in 1:5000) {
ys = sample(y, 13, replace = T)
xs = sample(x, 13, replace = T)
reg1 = lm(ys~xs-1)
b[i] = reg1$coefficients
}
b_med[j] = mean(b)
}
mean(b_med)
hist(b_med, breaks = 20)
data = density(b_med)
reg = lm(y~x-1)
plot(data$x, length(data)*data$y, type = 'l')
points(mean(b_med), 0, pch=19, col='red', cex=2)
points(reg$coefficients, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
reg$coefficients
reg = lm(y~x-1)
plot(data$x, length(data)*data$y, type = 'l')
points(mean(b_med), 0, pch=19, col='red', cex=2)
points(reg$coefficients, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
reg$coefficients
13/length(x)
b = c()
b_med = c()
for (j in 1:200){
b = c()
for (i in 1:5000) {
ys = sample(y, 16, replace = T)
xs = sample(x, 16, replace = T)
reg1 = lm(ys~xs-1)
b[i] = reg1$coefficients
}
b_med[j] = mean(b)
}
mean(b_med)
hist(b_med, breaks = 20)
data = density(b_med)
reg = lm(y~x-1)
# plot
plot(data$x, length(data)*data$y, type = 'l')
points(mean(b_med), 0, pch=19, col='red', cex=2)
points(reg$coefficients, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
reg$coefficients
b = c()
b_med = c()
for (j in 1:200){
b = c()
for (i in 1:5000) {
ys = sample(y, 16)
xs = sample(x, 16)
reg1 = lm(ys~xs-1)
b[i] = reg1$coefficients
}
b_med[j] = mean(b)
}
mean(b_med)
hist(b_med, breaks = 20)
data = density(b_med)
reg = lm(y~x-1)
# plot
plot(data$x, length(data)*data$y, type = 'l')
points(mean(b_med), 0, pch=19, col='red', cex=2)
points(reg$coefficients, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
reg$coefficients
sample(x, 16)
sample(x, 16)
sample(x, 16)
sample(x, 16)
sample(x, 16)
sample(x, 16)
sample(x, 16)
sample(x, 16)
sample(x, 16)
sample(x, 16)
sample(x, 16, prob = 1/length(x))
1/length(x)
sample(x, 16, prob = rep(1/length(x), length(x)) )
sample(x, 16, prob = rep(1/length(x), length(x)) )
sample(x, 16, prob = rep(1/length(x), length(x)) )
b = c()
b_med = c()
for (j in 1:200){
b = c()
for (i in 1:5000) {
ys = sample(y, 16, prob = rep(1/length(y), length(y)) )
xs = sample(x, 16, prob = rep(1/length(x), length(x)) )
reg1 = lm(ys~xs-1)
b[i] = reg1$coefficients
}
b_med[j] = mean(b)
}
mean(b_med)
hist(b_med, breaks = 20)
data = density(b_med)
reg = lm(y~x-1)
# plot
plot(data$x, length(data)*data$y, type = 'l')
points(mean(b_med), 0, pch=19, col='red', cex=2)
points(reg$coefficients, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
reg = lm(y~x-1)
summary(reg)
summary(reg1)
130.6/130
130.6/130-1
(130.6/130-1)*100
setwd('D:/Git projects/Econometry')   # definir o diretório
seq(10, 30, 1)
seq(10, 30, 1)^2
sum(seq(10, 30, 1)^2 )
10^seq(1, 6, 1)
log( 10^seq(1, 6, 1) )
sqrt(log( 10^seq(1, 6, 1) ) )
sum (sqrt(log( 10^seq(1, 6, 1) ) ) )
sum(sin( seq(0, 200, 10) ) )
rep(c(1, 2, 3), c(3, 2, 1))
sum(log (rep(c(1, 2, 3), c(3, 2, 1)) ) )
rep(c(4, 3, 1), c(1, 3, 1))
sum(tan( rep(c(4, 3, 1), c(1, 3, 1)) ) )
x = c(1, 4, 5, 10, 22, 3, 11)
n  = length(x)
n
lambda = 10
V = -n*lambda + sum(x*lambda) - sum(log(factorial(x)))
V
gamma(x)
factorial(x)
f*10
f = 2
f*10
rm(f)
v1 = seq(0, 100, 10)
seq(0, 100, 10)
v1 = seq(0, 100, 10)
v1[1] = 1
v1
pi
(v1*pi)^2
sum((v1*pi)^2)
v = seq(0, 100, 10)
v[1] = 1
sum((v*pi)^seq(1, 11, 1) )
a = seq(1, 30, 1)
x = 2
log((x + a)/a)
sum(log((x + a)/a) )
v = c(1, 4, 9, 10, 11, 3, 0.33, 5, 1)
z = c(21, 1, 6, 30, 11, 3, 44, 5.6, 5)
v[1]/z[1]
z[1]/z[3] + v[4] - z[8]
x = (1, 2, 4, 8, 5, 4, 6, 8, 3, 1, 5, 6, 3, 1.1, 7, 0.9, 1, 3, 4, 7, 8)
y = (0, 1, 3, 1, 3, 4, 6.6, 8, 1, 4.1, 6, 7, 4, 3.6, 5, 3, 1, 2, 2.2, 1, 5.7)
x = (1, 2, 4, 8, 5, 4, 6, 8, 3, 1, 5, 6, 3, 1.1, 7, 0.9, 1, 3, 4, 7, 8)
x = c(1, 2, 4, 8, 5, 4, 6, 8, 3, 1, 5, 6, 3, 1.1, 7, 0.9, 1, 3, 4, 7, 8)
y = c(0, 1, 3, 1, 3, 4, 6.6, 8, 1, 4.1, 6, 7, 4, 3.6, 5, 3, 1, 2, 2.2, 1, 5.7)
x = c(1, 2, 4, 8, 5, 4, 6, 8, 3, 1, 5, 6, 3, 1.1, 7, 0.9, 1, 3, 4, 7, 8)
y = c(0, 1, 3, 1, 3, 4, 6.6, 8, 1, 4.1, 6, 7, 4, 3.6, 5, 3, 1, 2, 2.2, 1, 5.7)
n = length(x)
aa = sum((x - mean(x))*(y - mean(y)) )
bb = sqrt(sum((x-mean(x))^2)*sum((y-mean(y))^2) )
c = aa/bb
c
reg = lm(y~x)
summary(reg)
library(optmx)
library(optimx)
beta = c(4, 5)
freg = function(beta, data){
with(data, sum((y - beta[1] - beta[2]*x)^2 ) )
}
df = data.frame(y, x)
freg(beta, df)
optim(par = beta, fn=freg, data=df)
my_reg = optim(par = beta, fn=freg, data=df)
my_reg[1]
my_reg$par[1]
my_reg$par[2]
beta1 = my_reg$par[1]
beta2 = my_reg$par[2]
y_hat = beta1 + beta2*x
epsilon = y - y_hat
length(my_reg$par)
n
sig = sqrt( sum(epsilon^2)/ (n - length(my_reg$par)) )
sig
ep_b2 = sig /  sqrt(sum( ( (x - mean(x) )^2) )
]
ep_b2 = sig / sqrt(  sum((x - mean(x) )^2 ) )
(n*sum((x - mean(x))^2 ) )
ep_b1 = sig*sqrt( sum(x^2) /  (n*sum((x - mean(x))^2 ) ) )
ep_b1
ep_b2
t_beta = (beta - 0)/ep_b1
t_beta1 = (beta - 0)/ep_b1
pt(t_beta1, n-2, lower.tail = F )
t_beta1 = (beta - 0)/ep_b1
pt(t_beta1, n-2, lower.tail = F)
pt(t_beta1, df = (n-2), lower.tail = F)
t_beta1 = (beta1 - 0)/ep_b1
pt(t_beta1, df = (n-2), lower.tail = F)
pt(-t_beta1, df = (n-2), lower.tail = F)
pt(t_beta1, df = (n-2), lower.tail = F)
@*pt(t_beta1, df = (n-2), lower.tail = F)
2*pt(t_beta1, df = (n-2), lower.tail = F)
