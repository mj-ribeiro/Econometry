install.packages('esqusser')
install.packages('esquisse')
librarys('esquisse')
library('esquisse')
library(sf)
library(geobr)
library(ggplot2)
st = read_state(code_state = 'SP', year = 2010)
esquisser(st)
19.69*15+19.48*10
20.96*25-19.69*15+19.48*10
20.96*25 - 19.69*15+19.48*10
20.96*25
20.96*25 -( 19.69*15+19.48*10 )
21.02*25 - ( 19.69*15+19.48*10 )
install.packages("Rcpp")
library(Rcpp)
adicao_r <- function(x, y, z) {
sum = x + y + z
return(sum)
}
cppFunction(
"int adicao_c(int x, int y, int z) {
int sum = x + y + z;
return sum;
}")
adicao_c(3, 3, 4)
adicao_c(3.3, 3, 4)
adicao_c(3.3, 3.88, 4)
adicao_c(3.3, 3.88, 4)
adicao_c(3.3, 3.88, 4.77)
cppFunction(
"int adicao_c(double x, int y, int z) {
int sum = x + y + z;
return sum;
}")
adicao_c(3.3, 3.88, 4.77)
13.59-13.24
0.35*20
27*7
27*7*2*27
27*7*2+7
library(tidyverse)
library(dplyr)
library(rlang)
library(dplyr)
tb <- tibble(x = 1:4,
y = c(4, 7, 1, 3),
z = c(10, 10, 22, 22),
k = c(TRUE, FALSE, FALSE, TRUE),
u = c("A", "B", "A", "B"))
install.packages('rlang')
install.packages("rlang")
install.packages('rlang')
install.packages("rlang")
library(dplyr)
install.packages('tydeverse')
installr::uninstall.R("4.0.0", GUI = TRUE)
install.packages('tydeverse')
install.packages('tydeverse')
library(dplyr)
library(tidyverse)
remove.packages("tidyverse", lib="~/R/win-library/4.0")
install.packages('tydeverse')
install.packages("tidyverse", dependencies=T)
library(dplyr)
library('tydeverse')
library('tidyverse')
library("tidyverse")
install.packages("tidyverse", dependencies = TRUE, INSTALL_opts = '--no-lock')
library("tidyverse")
library(dplyr)
remove.packages("rlang", lib="~/R/win-library/4.0")
library("tidyverse")
install.packages('rlang')
install.packages("rlang")
install.packages('dplyr')
library("tidyverse")
tb <- tibble(x = 1:4,
y = c(4, 7, 1, 3),
z = c(10, 10, 22, 22),
k = c(TRUE, FALSE, FALSE, TRUE),
u = c("A", "B", "A", "B"))
tb
View(tb)
tb %>%
arrange(desc(z), -y)
tb %>%
arrange(desc(z), -y)
remotes::install_version("pillar", version = "1.4.4")
tb <- tibble(x = 1:4,
y = c(4, 7, 1, 3),
z = c(10, 10, 22, 22),
k = c(TRUE, FALSE, FALSE, TRUE),
u = c("A", "B", "A", "B"))
tb %>%
arrange(desc(z), -y)
remotes::install_github("tidyverse/tibble")
library("tidyverse")
tb <- tibble(x = 1:4,
y = c(4, 7, 1, 3),
z = c(10, 10, 22, 22),
k = c(TRUE, FALSE, FALSE, TRUE),
u = c("A", "B", "A", "B"))
tb %>%
arrange(desc(z), -y)
tb %>%
filter(x > 3 | z=='TRUE')
tb %>%
filter(x > 3 | U=='A')
tb %>%
filter(x > 3 | u=='A')
tb %>%
filter(x > 3 | u =="A")
tb %>%
arrange(desc(z), -y)
library("tidyverse")
library('dplyr')
tb %>%
arrange(desc(z), -y)
rlang::last_error()
tb %>%
arrange(desc(z), -y)
rlang::last_error()
fx = function(x){
x^2+ 3*x - 2
}
a = 0
b = 5
N = 10000
s = 0
solve = function(a, b, N, fx){
s = 0
for(i in 1:N){
x = runif(1, a, b)
f = fx(x)
s = s + f
}
return( s*(b-a)/N )
}
solve(0, 5, 100000, fx)
f2 = function(x){
log(x) + 2
}
solve(0, 10, 100000, f2)
f1 = function(x){
x^2+ 3*x - 2
}
solve(0, 5, 100000, f1)
par(mfrow=c(1,2))
par(mfrow=c(1,2))
curve(f1, xlim = c(0, 5))
curve(f2, xlim=c(0, 10))
set.seed(2)
x = seq(-1, 1, length = 1000)
n = length(x)
beta2 = 6
beta_reg = c()
for (j in 1:1e6){
erro =  rnorm(n, 0, 1)
y = beta2*x + erro
reg = lm(y ~ x - 1)
beta_reg[j] = reg$coefficients[1]
}
for (j in 1:1e6){
erro =  rnorm(n, 0, 1)
y = beta2*x + erro
reg = lm(y ~ x - 1)
beta_reg[j] = reg$coefficients[1]
cat('Iteração', j)
}
y = beta2*x + erro
for (j in 1:1e6){
erro =  rnorm(n, 0, 1)
y = beta2*x + erro
reg = lm(y ~ x - 1)
beta_reg[j] = reg$coefficients[1]
cat('Iteração', j, '\n')
}
for (j in 1:1e4){
erro =  rnorm(n, 0, 1)
y = beta2*x + erro
reg = lm(y ~ x - 1)
beta_reg[j] = reg$coefficients[1]
cat('Iteração', j, '\n')
}
mean(beta_reg)
mean(beta_reg)
hist(beta_reg)
data = density(beta_reg)
reg = lm(y~x-1)
# plot
plot(data$x, length(data)*data$y, type = 'l', xlim = c(min(beta_reg), max(beta_reg)))
points(mean(beta_reg), 0, pch=19, col='red', cex=2)
points(reg$coefficients, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
reg = lm(y~x-1)
summary(reg)
# plot
plot(data$x, length(data)*data$y, type = 'l', xlim = c(min(beta_reg), max(beta_reg)))
points(mean(beta_reg), 0, pch=19, col='red', cex=2)
points(6, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
plot(data$x, length(data)*data$y, type = 'l', xlim = c(min(beta_reg), max(beta_reg)))
points(mean(beta_reg), 0, pch=19, col='red', cex=4)
points(6, 0, pch=19, col='blue', cex=2)
legend("topright", legend=c("beta médio","beta MQO"), col=c("red","blue"), lty=1,lwd=2)
for(i in 1:20000){
y = rnorm(1000, 0, 1)
x = rnorm(1000, 0, 1)
k = (x - mean(x)) / sum((x - mean(x))^2)
beta2_ols[i] = sum(k*y)
w = rnorm(1000, 0, 1)
beta2_alt[i] = sum(w*y)
cat('Iteração:', i, '\n')
}
beta2_ols = c()
beta2_alt = c()
for(i in 1:20000){
y = rnorm(1000, 0, 1)
x = rnorm(1000, 0, 1)
k = (x - mean(x)) / sum((x - mean(x))^2)
beta2_ols[i] = sum(k*y)
w = rnorm(1000, 0, 1)
beta2_alt[i] = sum(w*y)
cat('Iteração:', i, '\n')
}
par(mfrow=c(1, 2))
plot(density(beta2_ols), col='red', lty=2, lwd=2, main='Estimador de MQO')
abline(v=0, lty=2)
plot(density(beta2_alt), col='blue', lwd=2, main='Estimador Alternativo' )
abline(v=0, lty=2)
set.seed(10)
sd(beta2_alt)
sd(beta2_ols)
dadosPNADc <- get_pnadc(year = 2017, quarter = 3, vars=c("VD4001","VD4002"))
library('PNADcIBGE')
dadosPNADc <- get_pnadc(year = 2017, quarter = 3, vars=c("VD4001","VD4002"))
View(dadosPNADc)
dadosPNADc
head(dadosPNADc)
head(data.frame( dadosPNADc))
head(tible( dadosPNADc))
library(dplyr)
library(tidyverse)
head(tible( dadosPNADc))
head(tibble( dadosPNADc))
view(dadosPNADc)
vars = c("UF", "V2007", "V2009",
"V2010", "V3007", "VD3001", "VD4001",
"VD4002", "VD4020", "VD4035")
dadosPNADc <- get_pnadc(year = 2017, quarter = 3, vars=vars)
library(survey)
totalrenda <- svytotal(~VD4020, dadosPNADc, na.rm = T)
totalrenda
cv(totalrenda)
confint(totalrenda)
totalsexo <- svytotal(V2007, dadosPNADc, na.rm = T)
totalsexo <- svytotal(~V2007, dadosPNADc, na.rm = T)
totalsexo
totalsexoraca <- svytotal(~V2007 + V2010, dadosPNADc, na.rm = T)
totalsexoraca
totalsexoraca[1]
totalsexoraca[2]
totalsexoraca[1:2]
sum(totalsexoraca[1:2] )
sum(totalsexoraca[3:8] )
totalsexoEraca <- svytotal(~ interaction(V2007, V2010), dadosPNADc, na.rm = T)
ftable(totalsexoEraca)
totalsexorend <- svytotal(~ interaction(V2007, VD4020), dadosPNADc, na.rm = T)
totalsexorend <- svytotal(~ interaction(V2010, VD4020), dadosPNADc, na.rm = T)
ftable(totalsexoEraca)
mediarenda <- svymean(~VD4020, dadosPNADc, na.rm = T)
mediarenda
mediarenda <- svymean(~VD4020+V2007, dadosPNADc, na.rm = T)
mediarenda
totalsexoraca
mediarenda <- svymean(~VD4020+V2007, dadosPNADc, na.rm = T)
mediarenda
mediarenda <- svymean(~interaction( VD4020, V2007), dadosPNADc, na.rm = T)
mediarenda <- svymean(~VD4020, dadosPNADc, na.rm = T)
propsexo <- svymean(~V2007, dadosPNADc, na.rm = T)
propsexo
propsexoraca <- svymean(~V2007 + V2010, dadosPNADc, na.rm = T)
propsexoraca
txdesocup = svyratio(~VD4002 == "Pessoas desocupadas",
~VD4001 == "Pessoas na força de trabalho", dadosPNADc, na.rm = T)
txdesocup
txdesocup = svyratio(~VD4002,
~VD4001, na.rm = T)
txdesocup = svyratio(~VD4002 == "Pessoas desocupadas",
~VD4001 == "Pessoas na força de trabalho",  na.rm = T)
txdesocup = svyratio(~VD4002 == "Pessoas desocupadas",
~VD4001 == "Pessoas na força de trabalho",  na.rm = T)
txdesocup = svyratio(~VD4002 ,
~VD4001, dadosPNADc, na.rm = T)
txdesocup = svyratio(~VD4002 == "Pessoas desocupadas",
~VD4001 == "Pessoas na força de trabalho", dadosPNADc, na.rm = T)
txdesocup
txdesocup = svyratio(~VD4002 == "Pessoas desocupadas",
~VD4001 == "Pessoas na força de trabalho",
dadosPNADc, na.rm = T, se=F)
txdesocup
txdesocup = svyratio(~VD4002 == "Pessoas desocupadas",
~VD4001 == "Pessoas na força de trabalho",
dadosPNADc, na.rm = T, se=FALSE)
txdesocup
txdesocup[1]
medianarenda <- svyquantile(~VD4020, dadosPNADc, quantiles = .5, na.rm = T)
medianarenda
medianarenda <- svyquantile(~VD4020, dadosPNADc, quantiles = .95, na.rm = T)
medianarenda
medianarenda <- svyquantile(~VD4020, dadosPNADc, quantiles = .99, na.rm = T)
medianarenda
p95 <- svyquantile(~VD4020, dadosPNADc, quantiles = .95, na.rm = T)
quantisrenda = svyquantile(~VD4020, dadosPNADc, quantiles = c(.1,.25,.5,.75,.9), na.rm = T)
quantisrenda
quantisrenda = svyquantile(~VD4020, dadosPNADc, quantiles = c(.1,.25,.5,.75,.9, 0.99), na.rm = T)
quantisrenda
mediarendaM = svymean(~VD4020, subset(dadosPNADc, V2007 == "Mulher")  , na.rm = T)
mediarendaM
mediarendaH = svymean(~VD4020, subset(dadosPNADc, V2007 == "Homem")  , na.rm = T)
mediarendaH
svymean(~VD4020, subset(dadosPNADc, V2010 == "Branca")  , na.rm = T)
svymean(~VD4020, subset(dadosPNADc, V2010 == "Preta")  , na.rm = T)
txdesocup25 <- svyratio(~VD4002 == "Pessoas desocupadas",
~VD4001 == "Pessoas na força de trabalho",
subset(dadosPNADc, V2009>=25) , na.rm = T)
txdesocup25
txdesocup25[1]
nivelinstrHP30 = svymean(~VD3001,
subset(dadosPNADc,
V2007 == "Homem" &
V2010 == "Parda" & V2009 > 30), na.rm = T)
nivelinstrHP30 = svymean(~VD3001,
subset(dadosPNADc,
V2007 == "Homem" &
V2010 == "Parda" & V2009 > 30), na.rm = T)
vars = c("UF", "V2007", "V2009",
"V2010", "V3007", "VD3001", "VD4001",
"VD4002", "VD4020", "VD4035")
dadosPNADc <- get_pnadc(year = 2017, quarter = 3, vars=vars)
nivelinstrHP30 = svymean(~VD3007,
subset(dadosPNADc,
V2007 == "Homem" &
V2010 == "Parda" & V2009 > 30), na.rm = T)
nivelinstrHP30 = svymean(~V3007,
subset(dadosPNADc,
V2007 == "Homem" &
V2010 == "Parda" & V2009 > 30), na.rm = T)
nivelinstrHP30
nivelinstrHP30 = svymean(~V3007,
subset(dadosPNADc,
V2007 == "Homem" &
V2010 == "Preta" & V2009 > 30), na.rm = T)
nivelinstrHP30
nivelinstrHP30 = svymean(~V3007,
subset(dadosPNADc,
V2007 == "Homem" &
V2010 == "Branca" & V2009 > 30), na.rm = T)
nivelinstrHP30
nivelinstrHP30 = svymean(~V3007,
subset(dadosPNADc,
V2007 == "Mulher" &
V2010 == "Branca" & V2009 > 30), na.rm = T)
nivelinstrHP30
nivelinstrHP30 = svymean(~V3007,
subset(dadosPNADc,
V2007 == "Mulher" &
V2010 == "Preta" & V2009 > 30), na.rm = T)
nivelinstrHP30
mediaRendaUF <- svyby(~VD4020, ~UF, dadosPNADc, svymean, na.rm = T)
mediaRendaUF
mediaRendaUF[1]
mediaRendaUF[1:2]
mediaRendaUF[2]
max(mediaRendaUF[2])
max(mediaRendaUF[2], 2)
max(mediaRendaUF[2], 3)
sort(mediaRendaUF[2])
sort(mediaRendaUF[2], decreasing = T)
mediaRendaUF[2]
sort(mediaRendaUF[2][1])
sort(mediaRendaUF[2, ])
sort(mediaRendaUF[, 2])
sort(mediaRendaUF[,2], decreasing = T)
which( sort(mediaRendaUF[,2], decreasing = T) )
which( max(mediaRendaUF[,2]) )
which.max( mediaRendaUF[,2] )
m1 = which.max( mediaRendaUF[,2] )
mediaRendaUF[m1]
mediaRendaUF[m1,]
m1 = which.max( mediaRendaUF[,2], 2 )
order(mediaRendaUF)
order(mediaRendaUF, decreasing = T)[1]
order(mediaRendaUF, decreasing = T)
order(mediaRendaUF[,2], decreasing = T)
pos = order(mediaRendaUF[,2], decreasing = T)
mediaRendaUF[pos,]
mediaRendaUF[pos,][1:2,]
mediaRendaUF[pos,][,1:2]
svyhist(~ as.numeric(VD4035), dadosPNADc, main = "Histograma",
xlab = "Número de Horas Trabalhadas")
svyhist(~ as.numeric(VD4010), dadosPNADc, main = "Histograma",
xlab = "Número de Horas Trabalhadas")
svyhist(~ as.numeric(VD4020), dadosPNADc, main = "Histograma",
xlab = "Número de Horas Trabalhadas")
svyhist(~ as.numeric(VD4020), dadosPNADc, main = "Histograma", breaks = 25,
xlab = "Renda")
svyhist(~ as.numeric(VD4020), dadosPNADc, main = "Histograma", breaks = 35,
xlab = "Renda")
svyhist(~ as.numeric(VD4020), dadosPNADc, main = "Histograma", breaks = 55,
xlab = "Renda")
svyhist(~ as.numeric(VD4020), dadosPNADc, main = "Histograma", breaks = 55,freq = TRUE,
xlab = "Renda")
modeloLin <- svyglm(VD4020 ~  V2010 + V2009, dadosPNADc)
summary(modeloLin)
svyttest(VD4020 ~ V2007, dadosPNADc)
giniHab <- svygini(~VD4020, dadosPNADc, na.rm  =  TRUE)
install.packages('convey')
library('convey')
dadosPNADc <- convey_prep(dadosPNADc)
giniHab <- svygini(~VD4020, dadosPNADc, na.rm  =  TRUE)
giniHab
giniUF <- svyby(~VD4020, by = ~UF, dadosPNADc, svygini, na.rm  =  TRUE)
giniUF
order(giniUF)
order(giniUF[,2], decreasing = T)
giniUF[pos2, ]
pos2= order(giniUF[,2], decreasing = T)
giniUF[pos2, ]
curvaLorenz <- svylorenz(~VD4020, dadosPNADc, quantiles = seq(0, 1, .05), na.rm  =  TRUE)
dados <- get_pnadc(year = 2020, quarter = 1, vars=vars)
setwd('D:/Git projects/Econometry')   # definir o diretório
library('PNADcIBGE')
vars = c("UF", "V2007", "V2009",
"V2010", "V3007", "VD3001", "VD4001",
"VD4002", "VD4020", "VD4035")
dadosPNADc <- get_pnadc(year = 2020, quarter = 1, vars=vars)
surveysummary(dadosPNADc)
View(dadosPNADc)
dadosPNADc[["variables"]]
View(dadosPNADc[["variables"]])
totalrenda <- svytotal(~VD4020, dadosPNADc, na.rm = T)
library(survey)
totalrenda <- svytotal(~VD4020, dadosPNADc, na.rm = T)
totalsexoraca <- svytotal(~V2007 + V2010, dadosPNADc, na.rm = T)
totalsexoraca
totalsexoEraca <- svytotal(~ interaction(V2007, V2010), dadosPNADc, na.rm = T)
ftable(totalsexoEraca)
ftable(totalsexoEraca, se=F)
mediarenda <- svymean(~VD4020, dadosPNADc, na.rm = T)
mediarenda
propsexo =  svymean(~V2007, dadosPNADc, na.rm = T)
dados = dadosPNADc[["variables"]]
View(dadosPNADc[["variables"]])
mean(dados$VD4020, na.rm=T)
sum(dados$VD4020, na.rm=T)
totalrenda
table(dados$V2007)
totalsexo
totalsexo <- svytotal(~V2007, dadosPNADc, na.rm = T)
totalsexo
table(dados$V2007, na.rm=T)
tot_renda = sum(dados$VD4020, na.rm=T)
cv(tot_renda)
confint(tot_renda)
tot_renda = sum(dados[,VD4020], na.rm=T)
tot_renda = sum(dados[,'VD4020'], na.rm=T)
confint(tot_renda)
table(dados$V2007, dados$V2010)
table(dados$V2007)
prop(table(dados$V2007))
prop.table(table(dados$V2007))
quantile(dados$VD4020, 0.5)
quantile(dados$VD4020, 0.5, na.rm = t)
quantile(dados$VD4020, 0.5, na.rm = T)
quantile(dados$VD4020, probs=c(0.1, 0.5, 0.75), na.rm = T)
quantile(dados$VD4020, probs=c(0.1, 0.5, 0.75, 0.9, 0.99), na.rm = T)
quantile(dados$VD4020, probs=c(0.1, 0.5, 0.75, 0.9, 0.99, 0.9999), na.rm = T)
hist(dados$VD4020)
hist(dados$VD4020, breaks = 35)
hist(dados$VD4020, breaks = 55)
hist(dados$VD4020, breaks = 55, col='lightgreen')
hist(dados$VD4020, breaks = 55, col='lightblue')
dados[V2007=='Mulher', VD2040]
dados[V2007=='Mulher', VD4020]
dados['V2007'=='Mulher', 'VD4020']
dados[V2007=='Mulher', 'VD4020']
dados['V2007'=='Mulher', 'VD4020']
dados[dados$V2007=='Mulher', 'VD4020']
mean(dados[dados$V2007=='Mulher', 'VD4020'], na.rm=T)
mean(dados[dados$V2007=='Homem', 'VD4020'], na.rm=T)
mean(dados[dados$V2010=='Branca', 'VD4020'], na.rm=T)
mean(dados[dados$V2010=='Preta', 'VD4020'], na.rm=T)
mean(dados[dados$V2010=='Parda', 'VD4020'], na.rm=T)
table(dados$V2007, dados$V2010)
prop.table(dados$V2007, dados$V2010)
prop.table(table(dados$V2007, dados$V2010))
prop.table(table(dados$V2007, dados$V2010))*100
mean(dados[dados$V2010=='Índigena', 'VD4020'], na.rm=T)
mean(dados[dados$V2010=='Parda', 'VD4020'], na.rm=T)
mean(dados[dados$V2010=='Indígena', 'VD4020'], na.rm=T)
dados$VD4002
mean(dados$VD4002, na.rm=T)
des = ifelse(dados$VD4002=='Pessoas desocupadas', 1, 0)
ocup = ifelse(dados$VD4001=="Pessoas na força de trabalho", 1, 0)
sum(des)
sum(des, na.rm=T)
sum(ocup, na.rm = T)
tx_des = sum(des, na.rm=T)/sum(ocup, na.rm = T)
tx_des
